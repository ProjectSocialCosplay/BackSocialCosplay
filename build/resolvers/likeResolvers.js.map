{"version":3,"sources":["../../src/resolvers/likeResolvers.js"],"names":["Mutation","createLike","parent","info","postId","models","likeModel","postModel","userModel","userInfo","AuthenticationError","author","_id","post","save","like","findOneAndUpdate","$push","likes","id","deleteLike","findOneAndRemove","beforeDeleteLike","$pull","Error","Like","arg","findOne","exec"],"mappings":";;;;;;;;;;;;;AAAA;;eAEe;AAEXA,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU;AAAA,sGAAE,iBAAOC,MAAP,eAAoFC,IAApF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgBC,gBAAAA,MAAhB,QAAgBA,MAAhB;AAAA,qCAA2BC,MAA3B,EAAqCC,SAArC,gBAAqCA,SAArC,EAAgDC,SAAhD,gBAAgDA,SAAhD,EAA2DC,SAA3D,gBAA2DA,SAA3D,EAAyEC,QAAzE,SAAyEA,QAAzE;;AAAA,oBAEHA,QAFG;AAAA;AAAA;AAAA;;AAAA,sBAGE,IAAIC,wCAAJ,CAAwB,2BAAxB,CAHF;;AAAA;AAAA;AAAA,uBAKW,IAAIJ,SAAJ,CAAc;AAAEK,kBAAAA,MAAM,EAAEF,QAAQ,CAACG,GAAnB;AAAwBC,kBAAAA,IAAI,EAAET;AAA9B,iBAAd,EAAsDU,IAAtD,EALX;;AAAA;AAKFC,gBAAAA,IALE;AAAA;AAAA,uBAQFR,SAAS,CAACS,gBAAV,CAA2B;AAAEJ,kBAAAA,GAAG,EAAER;AAAP,iBAA3B,EAA4C;AAAEa,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd;AAAT,iBAA5C,CARE;;AAAA;AAAA;AAAA,uBAWFX,SAAS,CAACQ,gBAAV,CAA2B;AAAEJ,kBAAAA,GAAG,EAAEH,QAAQ,CAACG;AAAhB,iBAA3B,EAAkD;AAAEK,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd;AAAT,iBAAlD,CAXE;;AAAA;AAAA,iDAaDJ,IAbC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADJ;AAiBNK,IAAAA,UAAU;AAAA,sGAAE,kBAAOlB,MAAP,gBAAsFC,IAAtF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,MAAjB,SAAiBA,MAAjB;AAAA,qCAA6BC,MAA7B,EAAuCC,SAAvC,gBAAuCA,SAAvC,EAAkDC,SAAlD,gBAAkDA,SAAlD,EAA6DC,SAA7D,gBAA6DA,SAA7D,EAA2EC,QAA3E,SAA2EA,QAA3E;;AAAA,oBACHA,QADG;AAAA;AAAA;AAAA;;AAAA,sBAEE,IAAIC,wCAAJ,CAAwB,2BAAxB,CAFF;;AAAA;AAAA;AAAA,uBAIwBJ,SAAS,CAACe,gBAAV,CAA2B;AAACV,kBAAAA,MAAM,EAACF,QAAQ,CAACG,GAAjB;AAAsBC,kBAAAA,IAAI,EAACT;AAA3B,iBAA3B,CAJxB;;AAAA;AAIFkB,gBAAAA,gBAJE;;AAAA,qBAKLA,gBALK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOEd,SAAS,CAACQ,gBAAV,CAA2B;AAAEJ,kBAAAA,GAAG,EAAEU,gBAAgB,CAACX;AAAxB,iBAA3B,EAA6D;AAAEY,kBAAAA,KAAK,EAAE;AAAEL,oBAAAA,KAAK,EAAEI,gBAAgB,CAACH;AAA1B;AAAT,iBAA7D,CAPF;;AAAA;AAAA;AAAA,uBASEZ,SAAS,CAACS,gBAAV,CAA2B;AAAEJ,kBAAAA,GAAG,EAAEU,gBAAgB,CAACT;AAAxB,iBAA3B,EAA2D;AAAEU,kBAAAA,KAAK,EAAE;AAAEL,oBAAAA,KAAK,EAAEI,gBAAgB,CAACH;AAA1B;AAAT,iBAA3D,CATF;;AAAA;AAAA,kDAUGG,gBAVH;;AAAA;AAAA,sBAYE,IAAIE,KAAJ,CAAW,uBAAX,CAZF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjBJ,GAFC;AAmCXC,EAAAA,IAAI,EAAE;AACFd,IAAAA,MAAM;AAAA,kGAAE,kBAAOT,MAAP,EAAewB,GAAf,SAAqDvB,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BK,gBAAAA,SAA9B,SAAqBH,MAArB,CAA8BG,SAA9B,EAA0CC,QAA1C,SAA0CA,QAA1C;AAAA;AAAA,uBACSD,SAAS,CAACmB,OAAV,CAAkB;AAACf,kBAAAA,GAAG,EAAEV,MAAM,CAACS;AAAb,iBAAlB,EAAwCiB,IAAxC,EADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADJ;AAIFf,IAAAA,IAAI;AAAA,gGAAG,kBAAOX,MAAP,EAAewB,GAAf,SAA2CvB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BI,gBAAAA,SAA9B,SAAqBF,MAArB,CAA8BE,SAA9B;AAAA;AAAA,uBACUA,SAAS,CAACoB,OAAV,CAAkB;AAACf,kBAAAA,GAAG,EAAEV,MAAM,CAACW;AAAb,iBAAlB,EAAsCe,IAAtC,EADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJF;AAnCK,C","sourcesContent":["import {AuthenticationError} from 'apollo-server-express'\n\nexport default {\n\n    Mutation: {\n        createLike: async (parent, {postId}, { models: { likeModel, postModel, userModel } , userInfo}, info) => {\n\n            if (!userInfo) {\n                throw new AuthenticationError('You are not authenticated');\n            }\n            const like = await new likeModel({ author: userInfo._id, post: postId }).save();\n\n            // Push like to post collection\n            await postModel.findOneAndUpdate({ _id: postId }, { $push: { likes: like.id } })\n\n            // Push like to user collection\n            await userModel.findOneAndUpdate({ _id: userInfo._id }, { $push: { likes: like.id } });\n\n            return like;\n        },\n\n        deleteLike: async (parent, { postId }, { models: { likeModel, postModel, userModel } , userInfo}, info) => {\n            if (!userInfo) {\n                throw new AuthenticationError('You are not authenticated');\n            }\n            const beforeDeleteLike =  await likeModel.findOneAndRemove({author:userInfo._id, post:postId});\n            if(beforeDeleteLike){\n                // Delete like from users collection\n                await userModel.findOneAndUpdate({ _id: beforeDeleteLike.author }, { $pull: { likes: beforeDeleteLike.id } });\n                // Delete like from posts collection\n                await postModel.findOneAndUpdate({ _id: beforeDeleteLike.post }, { $pull: { likes: beforeDeleteLike.id } });\n                return beforeDeleteLike\n            }else{\n                throw new Error( 'internal server error');\n            }\n        },\n    },\n    Like: {\n        author: async (parent, arg, {models: {userModel}, userInfo}, info) => {\n            return await userModel.findOne({_id: parent.author}).exec()\n        },\n        post : async (parent, arg, {models: {postModel}}, info) => {\n            return await postModel.findOne({_id: parent.post}).exec()\n        },\n    },\n};"],"file":"likeResolvers.js"}