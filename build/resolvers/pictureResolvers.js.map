{"version":3,"sources":["../../src/resolvers/pictureResolvers.js"],"names":["Mutation","uploadProfileImage","parent","info","base64str","models","userModel","pictureModel","userInfo","AuthenticationError","uploader","upload","data","create","key","author","_id","pictureRes","updateOne","profile_image_url","e","Error","message","findOne","exec","user","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;eAEe;AAEXA,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBAAkB;AAAA,8GAAE,iBAAOC,MAAP,eAA2EC,IAA3E;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgBC,gBAAAA,SAAhB,QAAgBA,SAAhB;AAAA,qCAA6BC,MAA7B,EAAsCC,SAAtC,gBAAsCA,SAAtC,EAAiDC,YAAjD,gBAAiDA,YAAjD,EAAgEC,QAAhE,SAAgEA,QAAhE;;AAAA,oBACXA,QADW;AAAA;AAAA;AAAA;;AAAA,sBAEN,IAAIC,wCAAJ,CAAwB,2BAAxB,CAFM;;AAAA;AAAA;AAAA,uBAICC,eAASC,MAAT,CAAgBP,SAAhB,EAA2B,eAA3B,CAJD;;AAAA;AAIZQ,gBAAAA,IAJY;;AAAA,qBAKZA,IALY;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMaL,YAAY,CAACM,MAAb,CAAoB;AAACC,kBAAAA,GAAG,EAAEF,IAAI,CAACE,GAAX;AAAgBC,kBAAAA,MAAM,EAAEP,QAAQ,CAACQ;AAAjC,iBAApB,CANb;;AAAA;AAMNC,gBAAAA,UANM;AAAA;AAAA,uBAONX,SAAS,CAACY,SAAV,CAAoB;AAACF,kBAAAA,GAAG,EAAEC,UAAU,CAACF;AAAjB,iBAApB,EAA8C;AAACI,kBAAAA,iBAAiB,EAAEF,UAAU,CAACD;AAA/B,iBAA9C,WACK,UAACI,CAAD,EAAO;AACV,wBAAM,IAAIC,KAAJ,CAAUD,CAAC,CAACE,OAAZ,CAAN;AACH,iBAHC,CAPM;;AAAA;AAAA;AAAA,uBAWKhB,SAAS,CAACiB,OAAV,CAAkB;AAACP,kBAAAA,GAAG,EAAER,QAAQ,CAACQ;AAAf,iBAAlB,EAAuCQ,IAAvC,EAXL;;AAAA;AAWRC,gBAAAA,IAXQ;AAYZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAZY,iDAaL;AAAC,yBAAOb,IAAI,CAACE;AAAb,iBAbK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADZ;AAFC,C","sourcesContent":["import {uploader} from \"../utils/AwsS3.js\"\nimport {AuthenticationError} from \"apollo-server-express\";\n\nexport default {\n\n    Mutation: {\n        uploadProfileImage: async (parent, {base64str}, {models: {userModel, pictureModel}, userInfo}, info) => {\n            if (!userInfo) {\n                throw new AuthenticationError('You are not authenticated');\n            }\n            let data = await uploader.upload(base64str, 'users/avatars')\n            if (data) {\n                const pictureRes = await pictureModel.create({key: data.key, author: userInfo._id});\n                await userModel.updateOne({_id: pictureRes.author}, {profile_image_url: pictureRes._id})\n                    .catch((e) => {\n                        throw new Error(e.message)\n                    })\n                let user = await userModel.findOne({_id: userInfo._id}).exec()\n                console.log(user)\n                return {'key': data.key}\n            }\n        }\n    }\n};"],"file":"pictureResolvers.js"}