{"version":3,"sources":["../../src/resolvers/pictureResolvers.js"],"names":["Mutation","uploadProfileImage","parent","info","base64str","models","userModel","pictureModel","userInfo","AuthenticationError","find","author","_id","alwreadyExist","uploader","deleteObject","key","data","deleteMany","console","log","message","Error","upload","create","pictureRes","updateOne","profile_image_url","e","findOne","exec","user"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;eAEe;AAEXA,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBAAkB;AAAA,8GAAE,iBAAOC,MAAP,eAA2EC,IAA3E;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgBC,gBAAAA,SAAhB,QAAgBA,SAAhB;AAAA,qCAA6BC,MAA7B,EAAsCC,SAAtC,gBAAsCA,SAAtC,EAAiDC,YAAjD,gBAAiDA,YAAjD,EAAgEC,QAAhE,SAAgEA,QAAhE;;AAAA,oBACXA,QADW;AAAA;AAAA;AAAA;;AAAA,sBAEN,IAAIC,wCAAJ,CAAwB,2BAAxB,CAFM;;AAAA;AAAA;AAAA,uBAIYF,YAAY,CAACG,IAAb,CAAkB;AAACC,kBAAAA,MAAM,EAAEH,QAAQ,CAACI;AAAlB,iBAAlB,CAJZ;;AAAA;AAIVC,gBAAAA,aAJU;;AAAA,qBAKZA,aALY;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOKC,eAASC,YAAT,CAAsBF,aAAa,CAACG,GAApC,EAAyC,eAAzC,CAPL;;AAAA;AAORC,gBAAAA,KAPQ;;AAAA,qBAQRA,KARQ;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAUEV,YAAY,CAACG,IAAb,CAAkB;AAACC,kBAAAA,MAAM,EAAEH,QAAQ,CAACI;AAAlB,iBAAlB,EAA0CM,UAA1C,EAVF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYJC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAEC,OAAd;AAZI,sBAaE,IAAIC,KAAJ,CAAU,sBAAV,CAbF;;AAAA;AAAA;AAAA,uBAkBCR,eAASS,MAAT,CAAgBnB,SAAhB,EAA2B,eAA3B,CAlBD;;AAAA;AAkBZa,gBAAAA,IAlBY;;AAAA,qBAmBZA,IAnBY;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAoBaV,YAAY,CAACiB,MAAb,CAAoB;AAACR,kBAAAA,GAAG,EAAEC,IAAI,CAACD,GAAX;AAAgBL,kBAAAA,MAAM,EAAEH,QAAQ,CAACI;AAAjC,iBAApB,CApBb;;AAAA;AAoBNa,gBAAAA,UApBM;AAAA;AAAA,uBAqBNnB,SAAS,CAACoB,SAAV,CAAoB;AAACd,kBAAAA,GAAG,EAAEa,UAAU,CAACd;AAAjB,iBAApB,EAA8C;AAACgB,kBAAAA,iBAAiB,EAAEF,UAAU,CAACb;AAA/B,iBAA9C,WACK,UAACgB,CAAD,EAAO;AACV,wBAAM,IAAIN,KAAJ,CAAUM,CAAC,CAACP,OAAZ,CAAN;AACH,iBAHC,CArBM;;AAAA;AAAA;AAAA,uBAyBKf,SAAS,CAACuB,OAAV,CAAkB;AAACjB,kBAAAA,GAAG,EAAEJ,QAAQ,CAACI;AAAf,iBAAlB,EAAuCkB,IAAvC,EAzBL;;AAAA;AAyBRC,gBAAAA,IAzBQ;AA0BZZ,gBAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AA1BY,iDA2BL;AAAC,yBAAOd,IAAI,CAACD;AAAb,iBA3BK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADZ;AAFC,C","sourcesContent":["import {uploader} from \"../utils/AwsS3.js\"\nimport {AuthenticationError} from \"apollo-server-express\";\n\nexport default {\n\n    Mutation: {\n        uploadProfileImage: async (parent, {base64str}, {models: {userModel, pictureModel}, userInfo}, info) => {\n            if (!userInfo) {\n                throw new AuthenticationError('You are not authenticated');\n            }\n            const alwreadyExist = await pictureModel.find({author: userInfo._id})\n            if (alwreadyExist) {\n                //delete From bucket\n                let data = await uploader.deleteObject(alwreadyExist.key, 'users/avatars')\n                if (data) {\n                    try {\n                        await pictureModel.find({author: userInfo._id}).deleteMany();\n                    } catch (e) {\n                        console.log(e.message)\n                        throw new Error('Error Update Profile')\n                    }\n                }\n            }\n\n            let data = await uploader.upload(base64str, 'users/avatars')\n            if (data) {\n                const pictureRes = await pictureModel.create({key: data.key, author: userInfo._id});\n                await userModel.updateOne({_id: pictureRes.author}, {profile_image_url: pictureRes._id})\n                    .catch((e) => {\n                        throw new Error(e.message)\n                    })\n                let user = await userModel.findOne({_id: userInfo._id}).exec()\n                console.log(user)\n                return {'key': data.key}\n            }\n        }\n    }\n};"],"file":"pictureResolvers.js"}